diff --git a/aio/package.json b/aio/package.json
index 433e7982d9..f65feb1acf 100644
--- a/aio/package.json
+++ b/aio/package.json
@@ -153,6 +153,7 @@
     "lighthouse-logger": "^1.2.0",
     "lodash": "^4.17.21",
     "lunr": "^2.3.9",
+    "lunr-languages": "1.4.0",
     "npm-run-all": "^4.1.5",
     "protractor": "~7.0.0",
     "puppeteer": "9.0.0",
diff --git a/aio/src/app/search/search.worker.ts b/aio/src/app/search/search.worker.ts
index f1c44bc30b..131f976a08 100644
--- a/aio/src/app/search/search.worker.ts
+++ b/aio/src/app/search/search.worker.ts
@@ -1,6 +1,11 @@
 /// <reference lib="webworker" />
 import * as lunr from 'lunr';
 
+declare const require: any;
+require('lunr-languages/lunr.stemmer.support.js')(lunr);
+require('lunr-languages/tinyseg.js')(lunr);
+require('lunr-languages/lunr.ja.js')(lunr);
+require('lunr-languages/lunr.multi.js')(lunr);
 import {WebWorkerMessage} from '../shared/web-worker-message';
 
 const SEARCH_TERMS_URL = '/generated/docs/app/search-data.json';
@@ -45,6 +50,7 @@ function createIndex(loadIndexFn: IndexLoader): lunr.Index {
   const queryLexer = (lunr as any as {QueryLexer: {termSeparator: RegExp}}).QueryLexer;
   queryLexer.termSeparator = lunr.tokenizer.separator = /\s+/;
   return lunr(function() {
+    this.use((lunr as any).multiLanguage('en', 'ja'));
     this.pipeline.remove(lunr.stemmer);
     this.ref('path');
     this.field('topics', {boost: 15});
diff --git a/aio/tools/transforms/angular-base-package/processors/generateKeywords.js b/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
index dfe430c705..888c07a3f2 100644
--- a/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
+++ b/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
@@ -126,11 +126,11 @@ module.exports = function generateKeywordsProcessor(log) {
           token = token.trim();
 
           // Trim unwanted trivia characters from the start and end of the token
-          const TRIVIA_CHARS = '[\\s_"\'`({[<$*)}\\]>.,-]';
+          const TRIVIA_CHARS = '[\\s_"\'`({[<$*)}\\]>.,、。-]';
           // Tokens can contain letters, numbers, underscore, dot or hyphen but not at the start or end.
           // The leading TRIVIA_CHARS will capture any leading `.`, '-`' or `_` so we don't have to avoid them in this regular expression.
           // But we do need to ensure we don't capture the at the end of the token.
-          const POSSIBLE_TOKEN = '[a-z0-9_.-]*[a-z0-9]';
+          const POSSIBLE_TOKEN = '([a-z0-9_.-]*[a-z0-9]|[^\x00-\x7F]+)';
           token = token.replace(new RegExp(`^${TRIVIA_CHARS}*(${POSSIBLE_TOKEN})${TRIVIA_CHARS}*$`, 'i'), '$1');
 
           // Skip if blank or in the ignored words list
diff --git a/aio/yarn.lock b/aio/yarn.lock
index f304f7e943..b6aff95b16 100644
--- a/aio/yarn.lock
+++ b/aio/yarn.lock
@@ -7947,6 +7947,11 @@ lru-queue@^0.1.0:
   dependencies:
     es5-ext "~0.10.2"
 
+lunr-languages@1.4.0:
+  version "1.4.0"
+  resolved "https://registry.yarnpkg.com/lunr-languages/-/lunr-languages-1.4.0.tgz#42abb12aa81447d1ece5aa35676adcdf40a3e8a8"
+  integrity sha512-YWfZDExJN/MJEVE/DbM4AuVRLsqeHi+q3wmECMsWjGIOkd5mr9DUNos7fv8f5do9VLRMYXIzFjn+N4+KPI9pQA==
+
 lunr@^2.3.9:
   version "2.3.9"
   resolved "https://registry.yarnpkg.com/lunr/-/lunr-2.3.9.tgz#18b123142832337dd6e964df1a5a7707b25d35e1"
