# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build-and-test

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Get PR number
      uses: actions/github-script@v3
      id: pr-number
      with:
        script: return context.issue.number;
    - uses: actions/checkout@v2
      with:
        submodules: true

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: yarn install
    - name: Test
      run: npm test
    - name: Build
      run: ./build.sh
    # - name: Preview Deploy
    #   uses: FirebaseExtended/action-hosting-deploy@v0
      # A PR from forked repository cannot access secrets.
      # if: "${{ github.repository_owner == 'angular' }}"
      # with:
      #   repoToken: "${{ secrets.GITHUB_TOKEN }}"
      #   firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
      #   expires: 7d
      #   projectId: angular-ja
      #   channelId: "preview-pr${{steps.pr-number.outputs.result}}"
