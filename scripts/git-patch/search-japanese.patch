diff --git a/aio/tools/transforms/angular-base-package/processors/generateKeywords.js b/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
index 7cad35b0db..2ccdc1b3fb 100644
--- a/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
+++ b/aio/tools/transforms/angular-base-package/processors/generateKeywords.js
@@ -134,7 +134,7 @@ function convertToMap(collection) {
 // If the heading contains a name starting with ng, e.g. "ngController", then add the
 // name without the ng to the text, e.g. "controller".
 function tokenize(text) {
-  const rawTokens = text.split(/[\s\/]+/mg);
+  const rawTokens = text.split(/[\s\/、。]+/mg);
   const tokens = [];
   rawTokens.forEach(token => {
     // Strip off unwanted trivial characters
@@ -143,7 +143,8 @@ function tokenize(text) {
         .replace(/^[_\-"'`({[<$*)}\]>.]+/, '')
         .replace(/[_\-"'`({[<$*)}\]>.]+$/, '');
     // Ignore tokens that contain weird characters
-    if (/^[\w.\-]+$/.test(token)) {
+    // Non-ASCII characters: [^\x00-\x7F]
+    if (/^([\w.\-]|[^\x00-\x7F])+$/.test(token)) {
       tokens.push(token.toLowerCase());
       const ngTokenMatch = /^[nN]g([A-Z]\w*)/.exec(token);
       if (ngTokenMatch) {
